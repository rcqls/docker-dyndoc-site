#!/bin/bash

script="../guest-tools/bin/.action.sh"
guest_script="/home/ubuntu/tools/bin/.action.sh"

RootSrv=/home/ubuntu/RodaSrv 

if [ -f "$script" ]; then
    echo "## do not modify since automatically generated" > $script
fi


## répertoires à créer
mkdir -p bin
mkdir -p DockerFiles
## 
rodaname=""
rodaport=9700
rodauid=1000
rodagid=1000
rodatools=$HOME/Share/Roda
rodamongouser=mongo
rodamongopwd=lol2mongo
rodamongoport=27018
rodamongoexpressport=8081
dyndocubuntu=focal
rversion="4.0.2"
osidentifier="ubuntu-2004"
## user root to mount volumes
user_root=$HOME/Share/DockerSite
rodapublic=RodaPublic
rodadyndoclibrary=dyndoc-library
rodadyndocworld=dyndoc-world
rodamongodir=dyndoc-mongo
while true 
do
	cmd=$1
	shift
	case $cmd in
	-n|--name)
		rodaname=$1
		shift
	;;
	--port)
		rodaport=$1
		shift
	;;
	--uid)
		rodauid=$1
		shift
	;;
	--gid)
		rodagid=$1
		shift
	;;
	-r|--user-root)
		user_root=$1
		shift
	;;
	-p|--public)
		rodapublic=$1
		shift
	;;
	-t|--tools)
		rodatools=$1
		shift
	;;
	-u|--ubuntu)
		dyndocubuntu=$1
		shift
	;;
	--os)
		osidentifier=$1
		shift
	;;
	--rversion)
		rversion=$1
		shift
	;;
	-l|--libs)
		rodadyndoclibrary=$1
		shift
	;;
	-w|--world)
		rodadyndocworld=$1
		shift
	;;
	--mongo-user)
		rodamongouser=$1
		shift
	;;
	--mongo-pwd)
		rodamongopwd=$1
		shift
	;;
	--mongo-port)
		rodamongoport=$1
		shift
	;;
	--mongo-express-port)
		rodamongoexpressport=$1
		shift
	;;
	--mongo-dir)
		rodamongodir=$1
		shift
	;;
	*)
		break
	;;
	esac
	cmd=$1
done
if [ "${rodaname}" = "" ]; then
	rodaname="-${dyndocubuntu}"
fi 
rodapublic="${user_root}/${rodapublic}"
rodadyndoclibrary="${user_root}/${rodadyndoclibrary}"
rodadyndocworld="${user_root}/${rodadyndocworld}"
rodamongodir="${user_root}/${rodamongodir}"
## RodaSrvPublic folder volume to mount
mkdir -p $rodapublic
mkdir -p $rodadyndoclibrary
mkdir -p $rodadyndocworld
mkdir -p $rodamongodir/data/db
mkdir -p $rodamongodir/data/configdb
mkdir -p ../guest-tools/bin
cp scripts/guest-install.sh ../guest-tools/bin/.install.sh

# creating docker-compose.yml
txt=`cat template/docker-compose.yml`
txt=${txt//RodaName/$rodaname}
txt=${txt//RodaSrvPort/$rodaport}
txt=${txt//RodaSrvUID/$rodauid}
txt=${txt//RodaSrvGID/$rodagid}
txt=${txt//RodaSrvPublic/$rodapublic}
txt=${txt//RodaSrvTools/$rodatools}
txt=${txt//DyndocRubyUbuntu/$dyndocubuntu}
txt=${txt//RodaSrvDyndocLibrary/$rodadyndoclibrary}
txt=${txt//RodaSrvDyndocWorld/$rodadyndocworld}
txt=${txt//RodaSrvMongoUser/$rodamongouser}
txt=${txt//RodaSrvMongoPwd/$rodamongopwd}
txt=${txt//RodaSrvMongoPort/$rodamongoport}
txt=${txt//RodaSrvMongoExpressPort/$rodamongoexpressport}
txt=${txt//RodaSrvMongoDir/$rodamongodir}
echo "$txt" > "docker-compose.yml"

# creating DockerFile-dyndoc
txt=`cat template/Dockerfile-dyndoc`
txt=${txt//RodaSrvPort/$rodaport}
txt=${txt//RodaSrvUID/$rodauid}
txt=${txt//RodaSrvGID/$rodagid}
txt=${txt//RodaSrvPublic/$rodapublic}
txt=${txt//RodaSrvTools/$rodatools}
txt=${txt//DyndocRubyUbuntu/$dyndocubuntu}
txt=${txt//DyndocRubyRVERSION/$rversion}
txt=${txt//DyndocRubyOSIDENTIFIER/$osidentifier}
txt=${txt//RodaSrvDyndocLibrary/$rodadyndoclibrary}
txt=${txt//RodaSrvDyndocWorld/$rodadyndocworld}
echo "$txt" > "DockerFiles/Dockerfile-dyndoc"

# creating DockerFile-website
txt=`cat template/Dockerfile-website`
txt=${txt//RodaSrvPort/$rodaport}
txt=${txt//RodaSrvUID/$rodauid}
txt=${txt//RodaSrvGID/$rodagid}
txt=${txt//RodaSrvPublic/$rodapublic}
txt=${txt//RodaSrvTools/$rodatools}
txt=${txt//DyndocRubyUbuntu/$dyndocubuntu}
txt=${txt//RodaSrvDyndocLibrary/$rodadyndoclibrary}
txt=${txt//RodaSrvDyndocWorld/$rodadyndocworld}
echo "$txt" > "DockerFiles/Dockerfile-website"

# creating dyn-site
dyndocrubyname="dyndoc-ruby${rodaname}"
websitename="website${rodaname}"
mongoexpressname="mongo-express${rodaname}"
mongoname="mongo${rodaname}"
txt=`cat template/dyn-site`
txt=${txt//DYNDOCRUBY/$dyndocrubyname}
txt=${txt//WEBSITE/$websitename}
txt=${txt//MONGOEXPRESS/${mongoexpressname}}
txt=${txt//MONGODB/${mongoname}}
echo "$txt" > "dyn-site"
chmod u+x dyn-site

