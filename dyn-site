#!/bin/bash

cmd=$1
shift
script="bin/.action.sh"

RootSrv=/home/ubuntu/RodaSrv 

echo "## do not modify since automatically generated" > $script

case $cmd in
new)
    ## répertoires à créer
    mkdir -p bin
    mkdir -p DockerFiles
    ## 
    rodaport=9700
    rodauid=1000
    rodagid=1000
    rodapublic=../RodaPublic
    rodadyndoclibrary=../dyndoc-library
    rodadyndocworld=../dyndoc-world
    rodatools=$HOME/Share/Roda
    dyndocubuntu=disco
    while true 
    do
        cmd=$1
        shift
        case $cmd in
        --port)
            rodaport=$1
            shift
        ;;
        --uid)
            rodauid=$1
            shift
        ;;
        --gid)
            rodagid=$1
            shift
        ;;
        -p|--public)
            rodapublic=$1
            shift
        ;;
        -t|--tools)
            rodatools=$1
            shift
        ;;
        -u|--ubuntu)
            dyndocubuntu=$1
            shift
        ;;
        -l|--libs)
            rodadyndoclibrary=$1
            shift
        ;;
        -w|--world)
            rodadyndocworld=$1
            shift
        ;;
        *)
            break
        ;;
        esac
        cmd=$1
    done
    ## RodaSrvPublic folder volume to mount
    mkdir -p $rodapublic
    mkdir -p $rodadyndoclibrary
    mkdir -p $rodadyndocworld
    mkdir -p ../guest-tools

    # creating docker-compose.yml
    txt=`cat template/docker-compose.yml`
    txt=${txt//RodaSrvPort/$rodaport}
    txt=${txt//RodaSrvUID/$rodauid}
    txt=${txt//RodaSrvGID/$rodagid}
    txt=${txt//RodaSrvPublic/$rodapublic}
    txt=${txt//RodaSrvTools/$rodatools}
    txt=${txt//DyndocRubyUbuntu/$dyndocubuntu}
    txt=${txt//RodaSrvDyndocLibrary/$rodadyndoclibrary}
    txt=${txt//RodaSrvDyndocWorld/$rodadyndocworld}
    echo "$txt" > "docker-compose.yml"
    
    # creating DockerFile-dyndoc
    txt=`cat template/Dockerfile-dyndoc`
    txt=${txt//RodaSrvPort/$rodaport}
    txt=${txt//RodaSrvUID/$rodauid}
    txt=${txt//RodaSrvGID/$rodagid}
    txt=${txt//RodaSrvPublic/$rodapublic}
    txt=${txt//RodaSrvTools/$rodatools}
    txt=${txt//DyndocRubyUbuntu/$dyndocubuntu}
    txt=${txt//RodaSrvDyndocLibrary/$rodadyndoclibrary}
    txt=${txt//RodaSrvDyndocWorld/$rodadyndocworld}
    echo "$txt" > "DockerFiles/Dockerfile-dyndoc"
    
    # creating DockerFile-website
    txt=`cat template/Dockerfile-website`
    txt=${txt//RodaSrvPort/$rodaport}
    txt=${txt//RodaSrvUID/$rodauid}
    txt=${txt//RodaSrvGID/$rodagid}
    txt=${txt//RodaSrvPublic/$rodapublic}
    txt=${txt//RodaSrvTools/$rodatools}
    txt=${txt//DyndocRubyUbuntu/$dyndocubuntu}
    txt=${txt//RodaSrvDyndocLibrary/$rodadyndoclibrary}
    txt=${txt//RodaSrvDyndocWorld/$rodadyndocworld}
    echo "$txt" > "DockerFiles/Dockerfile-website"
    ;;
init)
    ## Create the RodaSrv folders inside container
    echo "mkdir -p /home/ubuntu/RodaSrv/edit" >  $script
    echo "mkdir -p /home/ubuntu/RodaSrv/public" >>  $script
    echo "cd /home/ubuntu/RodaSrv"  >>  $script
    echo "ln -sf .tools/system system" >>  $script
    echo "cd public"  >>  $script
    echo "ln -sf ../.tools/tools tools" >>  $script
    ## Config file
    echo "echo '---' > /home/ubuntu/dyndoc/etc/dyn-html.yml" >> $script
    echo "echo 'root: /home/ubuntu/RodaSrv' >> /home/ubuntu/dyndoc/etc/dyn-html.yml" >> $script
    docker-compose exec --user ubuntu website bash /home/ubuntu/bin/.action.sh
    ;;
add)
    # get RodaWebUser from environment variable
    RodaWebUser=$1
    if [ "$RodaWebUser" != "" ]; then
        echo "mkdir -p ${RootSrv}/public/pages" >>  $script
        echo "mkdir -p ${RootSrv}/public/users/${RodaWebUser}/{.pages,.edit}" >>  $script
        echo "cd ${RootSrv}/public/pages" >>  $script
        echo "ln -sf ../users/${RodaWebUser}/.pages ${RodaWebUser}" >>  $script
        echo "cd ${RootSrv}/edit" >>  $script
        echo "ln -sf ../public/users/${RodaWebUser}/.edit ${RodaWebUser}" >>  $script
        docker-compose exec --user ubuntu website bash /home/ubuntu/bin/.action.sh
    fi
    if [ "$2" == "--with-rodasrv-dir" ]; then
        mkdir -p ~/RodaSrv/edit
        RodapublicPath=$(readlink -f "`pwd`/../RodaPublic")
        cd ~/RodaSrv
        ln -s ${RodapublicPath} public
        cd edit
        ln -s "${RodapublicPath}/users/${RodaWebUser}/.edit" ${RodaWebUser}
    fi
    ;;
status | start | stop)
    docker-compose exec --user ubuntu website bash -c "/usr/local/bin/dyn-ctl $cmd"
    ;;
bash)
    user=ubuntu
    if [ "$1" = "--user-root" ];then
        user=root
    fi
    docker-compose exec --user $user website bash
    ;;
build)
    docker-compose build dyndoc-ruby
    docker-compose build website
    ;;
up)
    docker-compose up -d website
    ;;
down)
    docker-compose down
    ;;
pause)
    docker-compose pause
    ;;
unpause)
    docker-compose unpause
    ;;
install-julia)
    jl=$1
    extra=$2
    if [ "$extra" = "" ];then 
        extra="0"
    fi
    echo "mkdir -p /home/ubuntu/install" > $script
    echo "cd /home/ubuntu/install" >> $script
    echo "wget https://julialang-s3.julialang.org/bin/linux/x64/$jl/julia-$jl.$extra-linux-x86_64.tar.gz | tar xzvf" >> $script
    echo "tar xzvf julia-$jl.$extra-linux-x86_64.tar.gz" >> $script
    echo "ln -sf /home/ubuntu/install/julia-$jl.$extra/bin/julia /home/ubuntu/bin/julia" >> $script
    docker-compose exec --user ubuntu website bash /home/ubuntu/bin/.action.sh
    ;;
esac